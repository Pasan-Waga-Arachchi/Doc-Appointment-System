<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>